<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pytorch 编程常用代码 - 模型参数</title>
      <link href="2022-04-19/pytorch-bian-cheng-chang-yong-dai-ma-mo-xing-can-shu/"/>
      <url>2022-04-19/pytorch-bian-cheng-chang-yong-dai-ma-mo-xing-can-shu/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用代码</title>
      <link href="2022-04-19/yong-dai-ma/"/>
      <url>2022-04-19/yong-dai-ma/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch 编程常用代码 - 基本配置与张量</title>
      <link href="2022-04-18/pytorch-bian-cheng-chang-yong-dai-ma-ji-ben-pei-zhi-yu-zhang-liang/"/>
      <url>2022-04-18/pytorch-bian-cheng-chang-yong-dai-ma-ji-ben-pei-zhi-yu-zhang-liang/</url>
      
        <content type="html"><![CDATA[<h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><h2 id="导入包和版本查询"><a href="#导入包和版本查询" class="headerlink" title="导入包和版本查询"></a>导入包和版本查询</h2><ul><li>显示 <code>torch</code> 的版本<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torchvision<span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>version<span class="token punctuation">.</span>cuda<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>get_device_name<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="可复现性"><a href="#可复现性" class="headerlink" title="可复现性"></a>可复现性</h2><ul><li>固定 <code>torch</code> 和 <code>numpy</code> 的随机数种子<pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>torch<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>manual_seed_all<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>deterministic <span class="token operator">=</span> <span class="token boolean">True</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>benchmark <span class="token operator">=</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="设置显卡"><a href="#设置显卡" class="headerlink" title="设置显卡"></a>设置显卡</h2><ul><li><p>单张显卡</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'cuda'</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">'cpu'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>多张显卡</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">'CUDA_VISIBLE_DEVICES'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'0,1'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>清除显存</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>empty_cache<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="张量处理"><a href="#张量处理" class="headerlink" title="张量处理"></a>张量处理</h1><h2 id="张量的数据类型"><a href="#张量的数据类型" class="headerlink" title="张量的数据类型"></a>张量的数据类型</h2><ul><li><p><code>Pytorch</code> 有 9 种张量类型</p><p><img src="/2022-04-18/pytorch-bian-cheng-chang-yong-dai-ma-ji-ben-pei-zhi-yu-zhang-liang/tensor_type.jpg" alt="`Pytorch` 有 9 种张量类型"></p></li></ul><h2 id="张量的基本信息"><a href="#张量的基本信息" class="headerlink" title="张量的基本信息"></a>张量的基本信息</h2><ul><li><p>张量的类型，数据类型，形状，维度数量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tensor<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tensor<span class="token punctuation">.</span>dim<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>命名张量，给维度起名字，防止出错</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 在PyTorch 1.3之前，需要使用注释</span><span class="token comment"># Tensor[N, C, H, W]</span>images <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">)</span>images<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>images<span class="token punctuation">.</span>select<span class="token punctuation">(</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># PyTorch 1.3之后</span>NCHW <span class="token operator">=</span> <span class="token punctuation">[</span>‘N’<span class="token punctuation">,</span> ‘C’<span class="token punctuation">,</span> ‘H’<span class="token punctuation">,</span> ‘W’<span class="token punctuation">]</span>images <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> names<span class="token operator">=</span>NCHW<span class="token punctuation">)</span>images<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span>images<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 也可以这么设置</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>names<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'W'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 使用align_to可以对维度方便地排序</span>tensor <span class="token operator">=</span> tensor<span class="token punctuation">.</span>align_to<span class="token punctuation">(</span><span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'W'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><ul><li><p>默认类型转换</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 设置默认类型，pytorch中的FloatTensor远远快于DoubleTensor</span>torch<span class="token punctuation">.</span>set_default_tensor_type<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>FloatTensor<span class="token punctuation">)</span><span class="token comment"># 类型转换</span>tensor <span class="token operator">=</span> tensor<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> tensor<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> tensor<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> tensor<span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>torch.Tensor</code> 与 <code>np.ndarray</code> 转换</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ndarray <span class="token operator">=</span> tensor<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>ndarray<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># If ndarray has negative stride.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="张量的形状操作"><a href="#张量的形状操作" class="headerlink" title="张量的形状操作"></a>张量的形状操作</h2><ul><li><p>张量形变</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 在将卷积层输入全连接层的情况下通常需要对张量做形变处理，</span><span class="token comment"># 相比torch.view，torch.reshape可以自动处理输入张量不连续的情况。</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>tensor<span class="token punctuation">,</span> shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>打乱顺序</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tensor <span class="token operator">=</span> tensor<span class="token punctuation">[</span>torch<span class="token punctuation">.</span>randperm<span class="token punctuation">(</span>tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># 打乱第一个维度</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>水平翻转</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># pytorch不支持tensor[::-1]这样的负步长操作，水平翻转可以通过张量索引实现</span><span class="token comment"># 假设张量的维度为[N, D, H, W].</span>tensor <span class="token operator">=</span> tensor<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span>torch<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>张量复制</p><table><thead><tr><th align="left">Operation</th><th>New/Shared memory</th><th>Still in computation graph</th></tr></thead><tbody><tr><td align="left">tensor.clone()</td><td>New</td><td>Yes</td></tr><tr><td align="left">tensor.detach()</td><td>Shared</td><td>No</td></tr><tr><td align="left">tensor.detach.clone()()</td><td>New</td><td>No</td></tr></tbody></table></li></ul><ul><li><p>张量拼接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''注意torch.cat和torch.stack的区别在于torch.cat沿着给定的维度拼接，而torch.stack会新增一维。例如当参数是3个10x5的张量，torch.cat的结果是30x5的张量，而torch.stack的结果是3x10x5的张量。'''</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span>list_of_tensors<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>stack<span class="token punctuation">(</span>list_of_tensors<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>张量扩展</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Expand tensor of shape 64*512 to shape 64*512*7*7.</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">)</span>torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>tensor<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>expand<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="张量计算"><a href="#张量计算" class="headerlink" title="张量计算"></a>张量计算</h2><ul><li><p>单元素张量数值提取</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">value <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>得到非零元素</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">torch<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span>tensor<span class="token punctuation">)</span>               <span class="token comment"># index of non-zero elements</span>torch<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span>tensor<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment"># index of zero elements</span>torch<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span>tensor<span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>       <span class="token comment"># number of non-zero elements</span>torch<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span>tensor <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># number of zero elements</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将整数标签转为one-hot编码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># pytorch的标记默认从0开始</span>tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>N <span class="token operator">=</span> tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>num_classes <span class="token operator">=</span> <span class="token number">4</span>one_hot <span class="token operator">=</span> torch<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>N<span class="token punctuation">,</span> num_classes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span>one_hot<span class="token punctuation">.</span>scatter_<span class="token punctuation">(</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> index<span class="token operator">=</span>torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>tensor<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> src<span class="token operator">=</span>torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>N<span class="token punctuation">,</span> num_classes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>判断两个张量相等</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">torch<span class="token punctuation">.</span>allclose<span class="token punctuation">(</span>tensor1<span class="token punctuation">,</span> tensor2<span class="token punctuation">)</span>  <span class="token comment"># float tensor</span>torch<span class="token punctuation">.</span>equal<span class="token punctuation">(</span>tensor1<span class="token punctuation">,</span> tensor2<span class="token punctuation">)</span>     <span class="token comment"># int tensor</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>矩阵乘法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Matrix multiplcation: (m*n) * (n*p) * -&gt; (m*p).</span>result <span class="token operator">=</span> torch<span class="token punctuation">.</span>mm<span class="token punctuation">(</span>tensor1<span class="token punctuation">,</span> tensor2<span class="token punctuation">)</span><span class="token comment"># Batch matrix multiplication: (b*m*n) * (b*n*p) -&gt; (b*m*p)</span>result <span class="token operator">=</span> torch<span class="token punctuation">.</span>bmm<span class="token punctuation">(</span>tensor1<span class="token punctuation">,</span> tensor2<span class="token punctuation">)</span><span class="token comment"># Element-wise multiplication.</span>result <span class="token operator">=</span> tensor1 <span class="token operator">*</span> tensor2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>计算两组数据之间的两两欧式距离</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">dist <span class="token operator">=</span> torch<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>X1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">-</span> X2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/104019160">[深度学习框架]PyTorch常用代码段</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Beamer-使用指南</title>
      <link href="2021-09-06/beamer-shi-yong-zhi-nan/"/>
      <url>2021-09-06/beamer-shi-yong-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="Beamer-框架代码"><a href="#Beamer-框架代码" class="headerlink" title="Beamer 框架代码"></a>Beamer 框架代码</h2><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">{</span><span class="token keyword">beamer</span><span class="token punctuation">}</span><span class="token comment">%Information to be included in the title page:</span><span class="token function selector">\title</span><span class="token punctuation">{</span>Sample title<span class="token punctuation">}</span><span class="token function selector">\author</span><span class="token punctuation">{</span>Anonymous<span class="token punctuation">}</span><span class="token function selector">\institute</span><span class="token punctuation">{</span>Overleaf<span class="token punctuation">}</span><span class="token function selector">\date</span><span class="token punctuation">{</span>2021<span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">document</span><span class="token punctuation">}</span><span class="token function selector">\frame</span><span class="token punctuation">{</span><span class="token function selector">\titlepage</span><span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Sample frame title</span><span class="token punctuation">}</span>This is some text in the first frame. This is some text in the first frame. This is some text in the first frame.<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">document</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h2><h3 id="Frame"><a href="#Frame" class="headerlink" title="Frame"></a>Frame</h3><ul><li><code>frame</code> 构成文件的最基本单元，对应一页或者多页 pdf 文件。</li></ul><h3 id="标题页"><a href="#标题页" class="headerlink" title="标题页"></a>标题页</h3><p>标题页由<code>\frame{\titlepage}</code>生成，完整内容包含：</p><ul><li><code>title</code> 命令：<code>\title[缩略大标题]{大标题}</code></li><li><code>author</code> 命令：<code>\author[缩略作者名]{作者名}</code></li><li><code>institute</code> 命令：<code>\institute[缩略机构名]{机构名}</code></li><li><code>date</code> 命令：<code>\date[缩略日期]{日期}</code></li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\title</span><span class="token punctuation">[</span>About Beamer<span class="token punctuation">]</span> <span class="token comment">%optional</span><span class="token punctuation">{</span>About the Beamer class in presentation making<span class="token punctuation">}</span><span class="token function selector">\subtitle</span><span class="token punctuation">{</span>A short story<span class="token punctuation">}</span><span class="token function selector">\author</span><span class="token punctuation">[</span>Arthur, Doe<span class="token punctuation">]</span> <span class="token comment">% (optional, for multiple authors)</span><span class="token punctuation">{</span>A.~B.~Arthur<span class="token function selector">\inst</span><span class="token punctuation">{</span>1<span class="token punctuation">}</span> <span class="token function selector">\and</span> J.~Doe<span class="token function selector">\inst</span><span class="token punctuation">{</span>2<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function selector">\institute</span><span class="token punctuation">[</span>VFU<span class="token punctuation">]</span> <span class="token comment">% (optional)</span><span class="token punctuation">{</span>  <span class="token function selector">\inst</span><span class="token punctuation">{</span>1<span class="token punctuation">}</span><span class="token comment">%</span>  Faculty of Physics<span class="token function selector">\\</span>  Very Famous University  <span class="token function selector">\and</span>  <span class="token function selector">\inst</span><span class="token punctuation">{</span>2<span class="token punctuation">}</span><span class="token comment">%</span>  Faculty of Chemistry<span class="token function selector">\\</span>  Very Famous University<span class="token punctuation">}</span><span class="token function selector">\date</span><span class="token punctuation">[</span>VLC 2021<span class="token punctuation">]</span> <span class="token comment">% (optional)</span><span class="token punctuation">{</span>Very Large Conference, April 2021<span class="token punctuation">}</span><span class="token function selector">\logo</span><span class="token punctuation">{</span><span class="token function selector">\includegraphics</span><span class="token punctuation">[</span>height=1cm<span class="token punctuation">]</span><span class="token punctuation">{</span>overleaf-logo<span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="目录页"><a href="#目录页" class="headerlink" title="目录页"></a>目录页</h3><ul><li>显示所有目录</li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Table of Contents</span><span class="token punctuation">}</span><span class="token function selector">\tableofcontents</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>分章节显示所有目录/子目录内容</li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\AtBeginSection</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>  <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span>    <span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Table of Contents</span><span class="token punctuation">}</span>    <span class="token function selector">\tableofcontents</span><span class="token punctuation">[</span>currentsection<span class="token punctuation">]</span>  <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function selector">\AtBeginSubsection</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>  <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span>    <span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Table of Contents</span><span class="token punctuation">}</span>    <span class="token function selector">\tableofcontents</span><span class="token punctuation">[</span>currentsection<span class="token punctuation">]</span>  <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内容的跨页显示（页码不改变）"><a href="#内容的跨页显示（页码不改变）" class="headerlink" title="内容的跨页显示（页码不改变）"></a>内容的跨页显示（页码不改变）</h3><ul><li>使用<code>&lt;1-&gt;</code>标记<ul><li><code>&lt;&gt;</code>代表进行跨页显示</li><li><code>数字</code>代表在之后的第几页显示</li><li><code>-</code>代表自之后的第几页开始显示</li></ul></li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Sample frame title</span><span class="token punctuation">}</span>This is a text in second frame.For the sake of showing an example.<span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">itemize</span><span class="token punctuation">}</span> <span class="token function selector">\item</span>&lt;1-&gt; Text visible on slide 1 <span class="token function selector">\item</span>&lt;2-&gt; Text visible on slide 2 <span class="token function selector">\item</span>&lt;3&gt; Text visible on slide 3 <span class="token function selector">\item</span>&lt;4-&gt; Text visible on slide 4<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">itemize</span><span class="token punctuation">}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用 <code>\pause</code> 命令</li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span> In this slide <span class="token function selector">\pause</span> the text will be partially visible <span class="token function selector">\pause</span> And finally everything will be there<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内容强调"><a href="#内容强调" class="headerlink" title="内容强调"></a>内容强调</h3><ul><li><code>alert</code> 命令：标红字体</li><li><code>block</code> 环境：蓝色图框</li><li><code>alertblock</code> 环境：红色图框</li><li><code>examples</code> 环境：绿色图框</li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Sample frame title</span><span class="token punctuation">}</span>In this slide, some important text will be<span class="token function selector">\alert</span><span class="token punctuation">{</span>highlighted<span class="token punctuation">}</span> because it's important.Please, don't abuse it.<span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">block</span><span class="token punctuation">}</span><span class="token punctuation">{</span>Remark<span class="token punctuation">}</span>Sample text<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">block</span><span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">alertblock</span><span class="token punctuation">}</span><span class="token punctuation">{</span>Important theorem<span class="token punctuation">}</span>Sample text in red box<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">alertblock</span><span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">examples</span><span class="token punctuation">}</span>Sample text in green box. The title of the block is ``Examples".<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">examples</span><span class="token punctuation">}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="主题风格"><a href="#主题风格" class="headerlink" title="主题风格"></a>主题风格</h3><ul><li>主题：<code>\usetheme{Madrid}</code></li><li>颜色主题：<code>\usecolortheme{beaver}</code>（须放在主题命令之后）</li><li>字体<ul><li>字体大小规定在<code>\documentclass[17pt]{beamer}</code>中</li><li>字体主题：<code>\usefonttheme{structuresmallcapsserif}</code></li></ul></li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>17pt<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">beamer</span><span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">tikz</span><span class="token punctuation">}</span><span class="token function selector">\usetheme</span><span class="token punctuation">{</span>Madrid<span class="token punctuation">}</span><span class="token function selector">\usecolortheme</span><span class="token punctuation">{</span>beaver<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多栏"><a href="#多栏" class="headerlink" title="多栏"></a>多栏</h3><ul><li>columns 环境</li><li>column 命令标识宽度</li></ul><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span class="token function selector">\frametitle</span><span class="token punctuation">{</span><span class="token headline class-name">Two-column slide</span><span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">columns</span><span class="token punctuation">}</span><span class="token function selector">\column</span><span class="token punctuation">{</span>0.5<span class="token function selector">\textwidth</span><span class="token punctuation">}</span>This is a text in first column.<span class="token equation string">$$E=mc^2$$</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">itemize</span><span class="token punctuation">}</span><span class="token function selector">\item</span> First item<span class="token function selector">\item</span> Second item<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">itemize</span><span class="token punctuation">}</span><span class="token function selector">\column</span><span class="token punctuation">{</span>0.5<span class="token function selector">\textwidth</span><span class="token punctuation">}</span>This text will be in the second columnand on a second thoughts, this is a nice lookinglayout in some cases.<span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">columns</span><span class="token punctuation">}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">frame</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://www.overleaf.com/learn/latex/Beamer">https://www.overleaf.com/learn/latex/Beamer</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Beamer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas 读取 Excel 文件</title>
      <link href="2021-09-02/pandas-du-qu-excel-wen-jian/"/>
      <url>2021-09-02/pandas-du-qu-excel-wen-jian/</url>
      
        <content type="html"><![CDATA[<ol><li>使用接口 <a href="https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html">https://pandas.pydata.org/docs/reference/api/pandas.read_excel.html</a></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">pandas<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span>io<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> names<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> squeeze<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> engine<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> converters<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> true_values<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> false_values<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> skiprows<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> nrows<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> na_values<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> keep_default_na<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> na_filter<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> parse_dates<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> date_parser<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> thousands<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> comment<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> skipfooter<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> convert_float<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> mangle_dupe_cols<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> storage_options<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>重要参数</li></ul><ol start="2"><li>遇到的问题</li></ol><ul><li><p>ImportError: Install xlrd &gt;= 0.9.0 for Excel support</p><ul><li>解决方案：安装 <code>xlrd</code> 1.2.0 版本，过高的版本无法打开文件</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip uninstall xlrdpip <span class="token function">install</span> <span class="token assign-left variable">xlrd</span><span class="token operator">==</span><span class="token number">1.2</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 命令 nohup</title>
      <link href="2021-08-07/linux-ming-ling-nohup/"/>
      <url>2021-08-07/linux-ming-ling-nohup/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-nohup-命令"><a href="#什么是-nohup-命令" class="headerlink" title="什么是 nohup 命令"></a>什么是 <code>nohup</code> 命令</h1><p><code>nohup</code> (no hang up) 命令，用来标识其后的指令在运行过程中不受任何挂断指令的影响。在用户账户退出后，<code>nohup</code>标识的命令将继续运行。</p><h1 id="命令语法"><a href="#命令语法" class="headerlink" title="命令语法"></a>命令语法</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> <span class="token builtin class-name">command</span> <span class="token operator">&gt;</span> file_name <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>\&gt; file_name</code> 表示运行日志写入的文件名，默认名为 <code>nohup.out</code>。</li><li><code>2&gt;&amp;1</code> 是将标准错误（2）重定向到标准输出（&amp;1），标准输出（&amp;1）再被重定向输入到日志文件。</li><li><code>[&amp;]</code> 标志是否后台运行。</li></ul><h1 id="nohup-与-amp-联系与区别"><a href="#nohup-与-amp-联系与区别" class="headerlink" title="nohup 与 &amp; 联系与区别"></a><code>nohup</code> 与 <code>&amp;</code> 联系与区别</h1><ul><li><code>nohup</code> 指运行不挂断，用户退出会话后程序继续运行，用户使用 <code>Ctrl+c</code> 中断命令可以结束程序。</li><li><code>&amp;</code> 指后台运行，用户退出会话后程序被中止，可以使用 <code>kill</code> 命令中断程序。</li><li><code>nohup</code> + <code>&amp;</code> 后台永久运行，只能被<code>kill</code> 命令中断。</li></ul><h1 id="中断-nohup-任务"><a href="#中断-nohup-任务" class="headerlink" title="中断 nohup 任务"></a>中断 <code>nohup</code> 任务</h1><ul><li>使用 <code>nohup</code> 命令执行时控制台上显示的进程号 + <code>kill</code> 命令。</li><li>查看后台进程，检索进程号 + <code>kill</code> 命令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> -aux <span class="token operator">|</span> <span class="token function">grep</span> <span class="token builtin class-name">command</span> <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token function">grep</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux Command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode 使用技巧</title>
      <link href="2021-06-05/vscode-shi-yong-ji-qiao/"/>
      <url>2021-06-05/vscode-shi-yong-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><ol><li>VSCode 连接远程服务器失败</li></ol><ul><li>故障日志</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Resolver error: Error: Running the contributed command: <span class="token string">'_workbench.downloadResource'</span> failed.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>可能原因</p><ul><li>远程服务器网络条件差。</li></ul></li><li><p>解决方案：手动安装服务器端软件</p><ul><li>删除远程服务器原文件夹。</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf ~/.vscode-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>本地再次尝试连接，在远程服务器生成对应文件夹。</li><li>进入远程服务器软件端。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/.vscode-server/bin/<span class="token punctuation">[</span>commit_id<span class="token punctuation">]</span>/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>删除该文件夹下所有的内容。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>使用<code>wget</code>从官网下载最新的代码压缩文件。</li></ul><p><img src="/2021-06-05/vscode-shi-yong-ji-qiao/1.png" alt="查看commit_id"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://update.code.visualstudio.com/commit:<span class="token punctuation">[</span><span class="token variable">$COMMIT_ID</span><span class="token punctuation">]</span>/server-linux-x64/stable --no-check-certificate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>解压缩文件。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -xvf stable --strip-components <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>尝试本地重新连接。</li></ul><p><strong>可能遇到的问题</strong></p><ul><li>如果服务器下载网络存在问题，本地上传遇到 <code>版本不一致</code> ，需要检查服务器端 <code>commit_id</code> 文件夹名和自己下载的版本是否一致。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>包工具命令</title>
      <link href="2021-06-05/bao-guan-li-gong-ju-ming-ling/"/>
      <url>2021-06-05/bao-guan-li-gong-ju-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><ol><li><p>简介</p></li><li><p>安装 <code>cnpm</code> 进行包安装</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.orgcnpm <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>npm</code> 换源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span class="token function">npm</span> get registry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h2><ol><li><p>简介</p></li><li><p><code>pip</code> 换源</p></li></ol><ul><li>国内可供选择源地址</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">阿里云 http://mirrors.aliyun.com/pypi/simple/中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/豆瓣<span class="token punctuation">(</span>douban<span class="token punctuation">)</span> http://pypi.douban.com/simple/清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>pip</code> 永久换源</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip config <span class="token builtin class-name">set</span> global.index-url https://mirrors.aliyun.com/pypi/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>pip</code> 临时换源</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> matplotlib -i  https://pypi.tuna.tsinghua.edu.cn/simple/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex 常用输入片段</title>
      <link href="2021-05-24/markdownlatex-chang-yong-shu-ru-pian-duan/"/>
      <url>2021-05-24/markdownlatex-chang-yong-shu-ru-pian-duan/</url>
      
        <content type="html"><![CDATA[<h1 id="Mathpix-公式转换"><a href="#Mathpix-公式转换" class="headerlink" title="Mathpix 公式转换"></a>Mathpix 公式转换</h1><p>人生苦短，我选择 <a href="https://mathpix.com/">Mathpix</a></p><h1 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h1><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\mathbb{R}</td><td>$\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathcal{R}</td><td>$\mathcal{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathscr{R}</td><td>$\mathscr{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathrm{R}</td><td>$\mathrm{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathbf{R}</td><td>$\mathbf{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathit{R}</td><td>$\mathit{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathsf{R}</td><td>$\mathsf{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathtt{R}</td><td>$\mathtt{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr><tr><td>\mathfrak{R}</td><td>$\mathfrak{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$</td></tr></tbody></table><ul><li>一些花体字母，hexo 加载很慢很慢。</li></ul><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th align="left">左对齐</th><th>居中对齐（默认）</th><th align="right">右对齐</th><th align="center">两边对齐</th></tr></thead><tbody><tr><td align="left">“:—–”</td><td>“—————-“</td><td align="right">“—–:”</td><td align="center">“:——:”</td></tr></tbody></table><ul><li><font color="red">hexo 在处理右对齐时好像有 bug。</font><ul><li>已解决，删除了文件<code>materialize.min.css</code>中<code>td,th</code>中的<code>text_align</code>样式。</li></ul></li></ul><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">图片题目</span>](<span class="token url">图片路径：文章名的文件夹/图片名</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h1><h2 id="重音符"><a href="#重音符" class="headerlink" title="重音符"></a>重音符</h2><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\bar{a}</td><td>$\bar{a}$</td><td>\acute{a}</td><td>$\acute{a}$</td><td>\check{a}</td><td>$\check{a}$</td><td>\grave{a}</td><td>$\grave{a}$</td></tr><tr><td>\hat{a}</td><td>$\hat{a}$</td><td>\tilde{a}</td><td>$\tilde{a}$</td><td>\widehat{A}</td><td>$\widehat{A}$</td><td>\widetilde{A}</td><td>$\widetilde{A}$</td></tr><tr><td>\breve{a}</td><td>$\breve{a}$</td><td>\vec{a}</td><td>$\vec{a}$</td><td>\dot{a}</td><td>$\dot{a}$</td><td>\ddot{a}</td><td>$\ddot{a}$</td></tr></tbody></table><h2 id="小写希腊字母"><a href="#小写希腊字母" class="headerlink" title="小写希腊字母"></a>小写希腊字母</h2><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\alpha</td><td>$\alpha$</td><td>\beta</td><td>$\beta$</td><td>\gamma</td><td>$\gamma$</td><td>\delta</td><td>$\delta$</td></tr><tr><td>\epsilon</td><td>$\epsilon$</td><td>\varepsilon</td><td>$\varepsilon$</td><td>\zeta</td><td>$\zeta$</td><td>\xi</td><td>$\xi$</td></tr><tr><td>\theta</td><td>$\theta$</td><td>\vartheta</td><td>$\vartheta$</td><td>\iota</td><td>$\iota$</td><td>\kappa</td><td>$\kappa$</td></tr><tr><td>\lambda</td><td>$\lambda$</td><td>\mu</td><td>$\mu$</td><td>\nu</td><td>$\nu$</td><td>\tau</td><td>$\tau$</td></tr><tr><td>o</td><td>$o$</td><td>\pi</td><td>$\pi$</td><td>\varpi</td><td>$\varpi$</td><td>\rho</td><td>$\rho$</td></tr><tr><td>\varrho</td><td>$\varrho$</td><td>\sigma</td><td>$\sigma$</td><td>\varsigma</td><td>$\varsigma$</td><td>\upsilon</td><td>$\upsilon$</td></tr><tr><td>\phi</td><td>$\phi$</td><td>\varphi</td><td>$\varphi$</td><td>\chi</td><td>$\chi$</td><td>\psi</td><td>$\psi$</td></tr><tr><td>\omega</td><td>$\omega$</td><td>\eta</td><td>$\eta$</td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="大写希腊字母"><a href="#大写希腊字母" class="headerlink" title="大写希腊字母"></a>大写希腊字母</h2><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\Gamma</td><td>$\Gamma$</td><td>\Delta</td><td>$\Delta$</td><td>\Theta</td><td>$\Theta$</td><td>\Lambda</td><td>$\Lambda$</td></tr><tr><td>\Xi</td><td>$\Xi$</td><td>\Pi</td><td>$\Pi$</td><td>\Sigma</td><td>$\Sigma$</td><td>\Upsilon</td><td>$\Upsilon$</td></tr><tr><td>\Phi</td><td>$\Phi$</td><td>\Psi</td><td>$\Psi$</td><td>\Omega</td><td>$\Omega$</td><td></td><td></td></tr></tbody></table><h2 id="二元关系符"><a href="#二元关系符" class="headerlink" title="二元关系符"></a>二元关系符</h2><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>&lt;</td><td>$&lt;$</td><td>&gt;</td><td>$&gt;$</td><td>=</td><td>$=$</td><td>\neq,\ne</td><td>$\neq, \ne$</td></tr><tr><td>\leq, \le</td><td>$\leq, \le$</td><td>\geq, \ge</td><td>$\geq, \ge$</td><td>\nleq</td><td>$\nleq$</td><td>\ngeq</td><td>$\ngeq$</td></tr><tr><td>\equiv</td><td>$\equiv$</td><td>\ll</td><td>$\ll$</td><td>\gg</td><td>$\gg$</td><td></td><td></td></tr><tr><td>\sim</td><td>$\sim$</td><td>\simeq</td><td>$\simeq$</td><td>\approx</td><td>$\approx$</td><td>\cong</td><td>$\cong$</td></tr><tr><td>\subset</td><td>$\subset$</td><td>\supset</td><td>$\supset$</td><td>\subseteq</td><td>$\subseteq$</td><td>\supseteq</td><td>$\supseteq$</td></tr><tr><td>\in</td><td>$\in$</td><td>\ni,\owns</td><td>$\ni, \owns$</td><td>\propto</td><td>$\propto$</td><td>\mid</td><td>$\mid$</td></tr><tr><td>\parallel</td><td>$\parallel$</td><td>:</td><td>$:$</td><td>\notin</td><td>$\notin$</td><td></td><td></td></tr></tbody></table><h2 id="二元运算符"><a href="#二元运算符" class="headerlink" title="二元运算符"></a>二元运算符</h2><h2 id="大运算符"><a href="#大运算符" class="headerlink" title="大运算符"></a>大运算符</h2><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\sum</td><td>$\sum$</td><td>\prod</td><td>$\prod$</td><td>\coprod</td><td>$\coprod$</td><td></td><td></td></tr><tr><td>\bigcup</td><td>$\bigcup$</td><td>\bigcap</td><td>$\bigcap$</td><td>\int</td><td>$\int$</td><td>\oint</td><td>$\oint$</td></tr><tr><td>\bigvee</td><td>$\bigvee$</td><td>\bigwedge</td><td>$\bigwedge$</td><td></td><td></td><td></td><td></td></tr><tr><td>\bigoplus</td><td>$\bigoplus$</td><td>\bigotimes</td><td>$\bigotimes$</td><td>\bigodot</td><td>$\bigodot$</td><td></td><td></td></tr></tbody></table><h2 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h2><table><thead><tr><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>\vert</td><td>$\vert$</td><td>\Vert</td><td>$\Vert$</td><td>符号直接表示</td><td>$()$</td><td>符号直接表示</td><td>$[]$</td></tr><tr><td>\lbrace, \rbrace</td><td>$\lbrace, \rbrace$</td><td>\langle, \rangle</td><td>$\langle, \rangle$</td><td>\lceil, \rceil</td><td>$\lceil, \rceil$</td><td>\lfloor, \rfloor</td><td>$\lfloor, \rfloor$</td></tr></tbody></table><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><h2 id="大型公式输入"><a href="#大型公式输入" class="headerlink" title="大型公式输入"></a>大型公式输入</h2><h2 id="公式输入技巧"><a href="#公式输入技巧" class="headerlink" title="公式输入技巧"></a>公式输入技巧</h2><ol><li>长公式折行，使用$\right. \\ \left.$进行折行。</li></ol><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">equation</span><span class="token punctuation">}</span><span class="token equation string">  <span class="token equation-command regex">\begin</span>{aligned}    h_{i}^{l+1}=<span class="token equation-command regex">\sigma</span><span class="token equation-command regex">\left</span>(<span class="token equation-command regex">\sum</span>_{j <span class="token equation-command regex">\in</span> N_{i}^{r 1}} <span class="token equation-command regex">\frac</span>{1}{c_{i, r 1}} W_{r 1}^{(l)} h_{j}^{(l)}+<span class="token equation-command regex">\sum</span>_{j <span class="token equation-command regex">\in</span> N_{i}^{r 2}} <span class="token equation-command regex">\frac</span>{1}{c_{i, r 2}} W_{r 2}^{(l)} h_{j}^{(l)}+ <span class="token equation-command regex">\right</span>. <span class="token equation-command regex">\\</span>    <span class="token equation-command regex">\left</span>. <span class="token equation-command regex">\sum</span>_{j <span class="token equation-command regex">\in</span> N_{i}^{r_{j}}} <span class="token equation-command regex">\frac</span>{1}{c_{i, r 3}} W_{r 3}^{(l)} h_{j}^{(l)}+W_{0}^{(l)} h_{i}^{(l)}<span class="token equation-command regex">\right</span>)  <span class="token equation-command regex">\end</span>{aligned}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">equation</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>核方法</title>
      <link href="2021-05-23/he-fang-fa/"/>
      <url>2021-05-23/he-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="一些空间的定义"><a href="#一些空间的定义" class="headerlink" title="一些空间的定义"></a>一些空间的定义</h1><h2 id="泛函分析"><a href="#泛函分析" class="headerlink" title="泛函分析"></a>泛函分析</h2><ul><li>以下内容属于“泛函分析（functional analysis）”范畴，泛函分析研究的是函数空间（function space）的性质。</li><li>函数空间是指空间里面的点（元素）都是函数的空间。</li></ul><h2 id="线性空间"><a href="#线性空间" class="headerlink" title="线性空间"></a>线性空间</h2><ul><li>线性空间（linear space）：定义了数乘和加法的空间。可以通过确定一组基底（basis），通过线性组合得到空间中的所有点。</li><li>举例：<ul><li>二次函数空间，基底为 $\lbrace 1,x,x^2\rbrace$，任意函数 $f(x)=\alpha_1·1+\alpha_2·x+\alpha_3·x^2$，坐标为$(\alpha_1,\alpha_2,\alpha_3)$。</li></ul></li><li>一般选择正交的函数作为函数空间的基底，正交基（orthogonal basis），函数正交定义：<br>$$<br>\int f(x)g(x) {\rm d}x = 0<br>$$</li></ul><h2 id="线性度量空间"><a href="#线性度量空间" class="headerlink" title="线性度量空间"></a>线性度量空间</h2><ul><li>线性度量空间（metric linear space）：定义了距离（metric）的线性空间。</li><li>距离的性质：<ul><li>非负性：$d(x,y) \geq 0; d(x,y) = 0; \Leftrightarrow x = y$；</li><li>对称性：$d(x,y) = d(y,x)$；</li><li>三角不等式：$d(x,y) + d(y,z) \geq d(x,z)$。</li></ul></li></ul><h2 id="线性赋范空间"><a href="#线性赋范空间" class="headerlink" title="线性赋范空间"></a>线性赋范空间</h2><ul><li>线性赋范空间（normed linear space）：定义了范数（norm）的线性度量空间。</li><li>范数的性质：<ul><li>非负性：$||x|| \geq 0$；</li><li>齐次性：$||\alpha x||=|\alpha|||x||$；</li><li>三角不等式：$||x||+||y||\geq||x+y||$。</li></ul></li><li>范数和距离的区别：<ul><li>范数可以导出距离，范数符合距离所有性质；</li><li>距离导不出范数，距离不一定范数齐次性。<ul><li>$d(x,y)=||x-y||$</li></ul></li></ul></li></ul><h2 id="巴纳赫空间"><a href="#巴纳赫空间" class="headerlink" title="巴纳赫空间"></a>巴纳赫空间</h2><ul><li>巴纳赫空间（Banach space）：完备的线性赋范空间。</li><li>完备性（completeness）：任一柯西序列都收敛。</li><li>柯西序列（Cauchy sequence）：</li></ul><h2 id="内积线性空间"><a href="#内积线性空间" class="headerlink" title="内积线性空间"></a>内积线性空间</h2><ul><li>内积线性空间（inner product linear space）：定义了内积（inner product）的线性赋范空间。</li><li>内积：标量积（scalar product）或点积（dot product）。</li><li>内积的性质：<ul><li>对称性：$\langle x,y\rangle =\langle y,x\rangle $；</li><li>线性性：<ul><li>$\langle x,y\rangle +\langle x,z\rangle =\langle x,y+z\rangle $；</li><li>$\langle \alpha x,y\rangle =\alpha\langle x,y\rangle $（数乘只对第一变元有效）；</li></ul></li><li>正定性：$\langle x,x\rangle \geq 0$。</li></ul></li><li>内积和范数的区别：<ul><li>内积可以导出范数，$||x||^2 = \langle x,x \rangle$；</li><li>范数导不出内积。</li></ul></li></ul><h2 id="欧几里得空间"><a href="#欧几里得空间" class="headerlink" title="欧几里得空间"></a>欧几里得空间</h2><ul><li>欧几里得空间（Euclidean space）：有限维的实内积线性空间。</li></ul><h2 id="希尔伯特空间"><a href="#希尔伯特空间" class="headerlink" title="希尔伯特空间"></a>希尔伯特空间</h2><ul><li>希尔伯特空间（Hilbert space）：完备的内积线性空间。</li></ul><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><ol><li><p>泰勒级数（Taylor series）展开，基底为：$\lbrace x^i \rbrace,i=0,1,2,\cdots$；</p></li><li><p>傅里叶级数（Fourier series）展开，基底为：$\lbrace 1,\cos x, \sin x, \cos 2x, \sin 2x, \cdots \rbrace$；</p></li></ol><h1 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h1><h2 id="特征值与特征向量"><a href="#特征值与特征向量" class="headerlink" title="特征值与特征向量"></a>特征值与特征向量</h2><ul><li>有限维的$n\times n$矩阵$A$，可以定义特征值$\lambda$和特征向量$x$为：<br>$$<br>Ax=\lambda x<br>$$</li><li>特征向量可以看成这个矩阵$n$维列空间的一组基底。</li></ul><h2 id="核函数-1"><a href="#核函数-1" class="headerlink" title="核函数"></a>核函数</h2><ul><li>我们把每个函数$f(x)$看作一个无穷维的向量，定义一个无穷维的矩阵$K(x,y)$，如果它满足：<ul><li>正定性：$\forall f \rightarrow \iint f(x)K(x,y)f(y){\rm d}x{\rm d}y \geq 0$；</li><li>对称性：$K(x,y)=K(y,x)$；</li></ul></li></ul><p>则称之为核函数（kernel function）。</p><ul><li>核函数究竟是什么？<ul><li>首先，他不是映射，而是一种在高维空间的内积计算方式；</li><li>其次，应用核函数的时候，我们是不用找具体的低维映射到高维的映射方式，只需要把高维空间的内积计算方式定义好，并将其表示为在低维空间中的坐标之间的计算；</li><li>最后，Mercer Theorem 保证了一个符合条件的核函数一定存在一个映射后的高维空间与之对应。</li></ul></li></ul><h2 id="核函数的特征值与特征函数"><a href="#核函数的特征值与特征函数" class="headerlink" title="核函数的特征值与特征函数"></a>核函数的特征值与特征函数</h2><ul><li><p>对于一个核函数$K(x,y)$，存在特征值$\lambda$和特征函数$\psi(x)$，满足：</p><p>$$<br>\int K(x,y)\psi(x){\rm d}x = \lambda\psi(y)<br>$$</p></li><li><p>对于不同的特征值$\lambda_1,\lambda_2$和他们对应的特征函数$\psi_1(x),\psi_2(x)$，满足：</p></li></ul><p>$$<br>\int \lambda_1\psi_1(x)\psi_2(x){\rm d}x = \iint K(y,x)\psi_1(y){\rm d}y\psi_2(x){\rm d}x \<br>=\iint K(y,x)\psi_2(x){\rm d}x\psi_1(y){\rm d}y \<br>$$</p><p>$$<br>=\int \lambda_2\psi_2(y)\psi_1(y){\rm d}y \<br>=\int \lambda_2\psi_2(x)\psi_1(x){\rm d}x \<br>$$</p><p>因此：</p><p>$$<br>\langle\psi_1,\psi_2\rangle=\int\psi_1(x)\psi_2(x){\rm d}x=0<br>$$</p><ul><li>此时我们找到了无穷多个特征值$\lbrace\lambda_i\rbrace_{i=1}^{\infty}$，一组无穷多个元素的正交基$\lbrace\psi_i\rbrace_{i=1}^{\infty}$。</li></ul><h2 id="再生核希尔伯特空间"><a href="#再生核希尔伯特空间" class="headerlink" title="再生核希尔伯特空间"></a>再生核希尔伯特空间</h2><ul><li><p>如果我们把$\lbrace\sqrt{\lambda_i}\psi_i\rbrace_{i=1}^{\infty}$当成一组正交基来生成一个希尔伯特空间$\mathcal{H}$，则这个空间中的所有函数都能表示为：</p><p>$$<br>f=\sum_{i=1}^{\infty}f_i\sqrt{\lambda_i}\psi_i<br>$$</p></li><li><p>函数坐标：$f=(f_1,f_2,\cdots)_{\mathcal{H}}^T$；</p></li><li><p>函数内积：</p><p>$$<br>\langle f,g \rangle_\mathcal{H} = \sum_{i=1}^\infty f_i g_i<br>$$</p></li><li><p>核函数看成一种内积形式：</p></li></ul><p>$$<br>K(x,·)=\sum_{i=1}^\infty\lambda_i\psi_i(x)\psi_i(·)<br>$$</p><ul><li><p>$K(x,·)$：$x$是一个输入的函数（核函数是函数的函数，输入变量是两个函数），$x$这个函数写成基和坐标的形式是：$\sum_{i=1}^\infty\sqrt{\lambda_i}\psi_i(x)$；</p></li><li><p>$K$的向量表示：$K(x,·)=(\sqrt{\lambda_1}\psi_1(x),\sqrt{\lambda_2}\psi_2(x),\cdots)_\mathcal{H}^\infty$；</p></li><li><p>$K$的内积表示：$\lbrace K(x,·),K(y,·)\rbrace_\mathcal{H} = \sum_{i=0}^\infty \lambda_i\phi_i(x)\phi_i(y) = K(x,y)$ —— 再生性 —— 再生核希尔伯特空间（reproducing kernel Hilbert space，RKHS）。</p></li></ul><h2 id="映射函数"><a href="#映射函数" class="headerlink" title="映射函数"></a>映射函数</h2><ul><li>定义一个映射$\phi:X\rightarrow\mathcal{H},\phi(x)=K(x,·)$，他把一个点$x$映射成了一个函数：</li></ul><p>$$<br>\phi(x)=K(x,·)=(\sqrt{\lambda_1}\psi_1(x),\sqrt{\lambda_2}\psi_2(x),\cdots)_\mathcal{H}^\infty<br>$$</p><ul><li>则：</li></ul><p>$$<br>\lbrace\phi(x),\phi(y)\rbrace_\mathcal(H)=\lbrace K(x,·),K(y,·)\rbrace_\mathcal(H)=K(x,y)<br>$$</p><ul><li>不用确定$K(x,·)$的具体形式，但是一定可以找到，具体可以看 Moore-Aronszajn 定理 —— 核方法。</li></ul><h1 id="SVM-中的应用"><a href="#SVM-中的应用" class="headerlink" title="SVM 中的应用"></a>SVM 中的应用</h1><ul><li>未完待续</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://sakigami-yang.me/2017/08/13/about-kernel-01/">说一说核方法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx服务器配置教程</title>
      <link href="2021-05-17/nginx-fu-wu-qi-pei-zhi-jiao-cheng/"/>
      <url>2021-05-17/nginx-fu-wu-qi-pei-zhi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-Nginx"><a href="#什么是-Nginx" class="headerlink" title="什么是 Nginx?"></a>什么是 Nginx?</h1><h1 id="Nginx-的安装"><a href="#Nginx-的安装" class="headerlink" title="Nginx 的安装"></a>Nginx 的安装</h1><ul><li>服务器环境：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CentOS <span class="token number">7.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>准备工作</li></ol><ul><li><code>SSL</code> 功能安装 <code>openssl</code> 库:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> openssl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>gzip</code> 模块需要 <code>zlib</code> 库：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> zlib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>rewrite</code> 模块安装 <code>pcre</code> 库：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> pcre<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>安装 Nginx 依赖项和 Nginx</li></ol><ul><li>安装 Nginx 需要的库 [此处注意下载链接的有效性]</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>安装 Nginx：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>启动 Nginx：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> nginx start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>测试 Nginx 的有效性：浏览器访问本地/服务器端口，如下表示安装成功：</li></ol><ul><li>服务器端注意开放 80 端口。</li></ul><p><img src="/2021-05-17/nginx-fu-wu-qi-pei-zhi-jiao-cheng/success.png" alt="正确启动Nginx的界面"></p><ol start="4"><li>配置 Nginx 的文件位于：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/nginx/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h1><ol><li><p>缺省配置：<code>http -&gt; server -&gt; location</code>，内层块自动继承外层块的内容。</p></li><li><p><code>http</code> 层次：<code>/etc/nginx/nginx.conf</code></p></li></ol><ul><li><code>include</code> 语句指明了下级配置文件的路径：当需要处理的 <code>server</code> 超过 2 个时，建议将不同虚拟机的配置放在不同文件中，通过在主配置文件的 <code>include</code> 指令进行选择。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http <span class="token punctuation">{</span>    <span class="token punctuation">..</span>. <span class="token punctuation">..</span>.    include /etc/nginx/conf.d/*.conf<span class="token punctuation">;</span>    <span class="token comment"># include /etc/nginx/[name]/*.conf</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>server</code> 层次：<code>/etc/nginx/conf.d/default.conf</code></li></ol><ul><li>在 <code>url/ip</code> 层次对发送的请求进行后端服务器的转发；</li><li>通过构建虚拟主机(server)的概念，用 <code>server_name</code> 对服务进行配置隔离；</li><li><code>listen</code> 用于确定监听的端口；</li><li>对应于同一规则的多个域名可以使用空格进行分离。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  demo.tdingquan.top<span class="token punctuation">;</span>    access_log  /var/log/nginx/host.access.log  main<span class="token punctuation">;</span>    <span class="token punctuation">..</span>. <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><code>location</code> 层次：<code>/etc/nginx/conf.d/default.conf</code>，包含在 <code>server</code> 内</li></ol><ul><li>每个 <code>url/ip</code> 对应于一个服务，Nginx 对服务进行处理转发，转发路径通过 <code>location</code> 指定；</li><li><code>server</code> 是对域名的指定，<code>location</code> 是对访问内容的指定；</li><li><code>index</code> 用于设定访问的默认首页地址；</li><li><code>root</code> 用于指定访问的根目录。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    <span class="token punctuation">..</span>. <span class="token punctuation">..</span>.    location / <span class="token punctuation">{</span>        root   /root/BoxEViz<span class="token punctuation">;</span>        index  main.html index.html index.htm<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>location</code> 匹配规则：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~ 表示执行一个正则匹配，区分大小写；~* 表示执行一个正则匹配，不区分大小写；^~ 表示普通字符匹配<span class="token operator">=</span> 表示普通字符精确匹配<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h1><ol><li>服务转发</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">location / <span class="token punctuation">{</span>  proxy_pass <span class="token punctuation">[</span>url<span class="token punctuation">]</span>:<span class="token punctuation">[</span>port<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>负载均衡</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">upstream myserver<span class="token punctuation">;</span> <span class="token punctuation">{</span>    ip_hash<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.1:8001<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.2:8002<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.3<span class="token punctuation">;</span>    server <span class="token number">172.16</span>.1.4<span class="token punctuation">;</span><span class="token punctuation">}</span>location / <span class="token punctuation">{</span>    proxy_pass http://myserver<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Nginx-配置文件正确性验证"><a href="#Nginx-配置文件正确性验证" class="headerlink" title="Nginx 配置文件正确性验证"></a>Nginx 配置文件正确性验证</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx -tnginx -tc <span class="token punctuation">[</span>config_file_address<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><ol><li>访问主页时，控制台报错：”403”；查看日志：<code>open() "/data/www/1.txt" failed (13: Permission denied) ...</code></li></ol><ul><li>检查 Nginx 的启动用户：<code>/etc/nginx/nginx.conf</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">user root<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib 基础知识（一）</title>
      <link href="2021-04-09/matplotlib-ji-chu-zhi-shi/"/>
      <url>2021-04-09/matplotlib-ji-chu-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h3><ul><li><p><code>matplotlib</code> 接受 <code>numpy.array</code> 的数据格式进行绘制。</p></li><li><p><code>pandas</code> <code>numpy.matrix</code> 格式对象最好进行转换。</p> <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plta <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> columns <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcde'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a_asarray <span class="token operator">=</span> a<span class="token punctuation">.</span>valuesb <span class="token operator">=</span> np<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b_asarray <span class="token operator">=</span> np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="调用风格"><a href="#调用风格" class="headerlink" title="调用风格"></a>调用风格</h3><ol><li><p>类似<code>matlab</code>风格，调用 <code>plt</code> 的函数进行绘制，作用于当前的 <code>axes</code> 对象上。</p><ul><li><p>适用于交互编程，如 <code>jupyter-notebook</code> 。</p> <pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">)</span>  <span class="token comment"># Plot some data on the (implicit) axes.</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'quadratic'</span><span class="token punctuation">)</span>  <span class="token comment"># etc.</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'cubic'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x label'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y label'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Simple Plot"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>面向对象 (OO) 风格，调用 <code>Axes</code> 的函数进行绘制，作用于调用函数的 <code>axes</code> 对象上。</p><ul><li><p>适用于非交互编程，函数复用的场景。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token comment"># fig 是 Figure 对象</span><span class="token comment"># ax 是 AxesSubplot 对象</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">)</span>  <span class="token comment"># Plot some data on the axes.</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'quadratic'</span><span class="token punctuation">)</span>  <span class="token comment"># Plot more data on the axes...</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'cubic'</span><span class="token punctuation">)</span>  <span class="token comment"># ... and some more.</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'x label'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'y label'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"Simple Plot"</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h3 id="概念解释"><a href="#概念解释" class="headerlink" title="概念解释"></a>概念解释</h3><p><img src="/2021-04-09/matplotlib-ji-chu-zhi-shi/elements.png" alt="参与绘图的主要元素"></p><ol><li><p><code>Canvas</code></p><ul><li>实际进行绘图的对象，对用户隐藏。</li></ul></li><li><p><code>Figure</code></p><ul><li><p>类似绘图时使用的画板，上面可以放很多的画纸。</p> <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 只创建画布，不创建绘制区域，可以之后再创建</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 创建画布，附带一个绘制区域</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 创建画布，附带 2*2 个绘制区域</span>fix<span class="token punctuation">,</span> axs <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>Axes</code></p><ul><li>类似绘图时使用的画纸。</li><li>一个 <code>Figure</code> 对象可以有很多个 <code>Axes</code>，但每个 <code>Axes</code> 只能从属于一个 <code>Figure</code>。</li><li>具有2或3个 <code>Axis</code> 对象，即图上的坐标轴。</li><li>函数接口包括：<ul><li>刻度范围：<code>set_xlim</code>, <code>set_ylim</code>;</li><li>标题：<code>set_title</code>;</li><li>坐标轴标签：<code>set_xlabel</code>,  <code>set_ylabel</code> 等。</li></ul></li></ul></li><li><p><code>Axis</code></p><ul><li>图上的坐标轴，管理轴上的刻度和刻度名称、范围。</li><li>通过 <code>Locator</code> 和 <code>Formator</code> 控制名称的位置和格式。</li></ul></li><li><p><code>Artist</code></p><ul><li>每个绘制对象都是一个<code>Artist</code>对象，从属于一个<code>Axes</code>对象。</li></ul></li></ol><h3 id="代码抽象"><a href="#代码抽象" class="headerlink" title="代码抽象"></a>代码抽象</h3>   <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">plotter</span><span class="token punctuation">(</span>ax<span class="token punctuation">,</span> xdata<span class="token punctuation">,</span> ydata<span class="token punctuation">,</span> <span class="token operator">**</span>params<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">return</span> ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>xdata<span class="token punctuation">,</span> ydata<span class="token punctuation">,</span> <span class="token operator">**</span>params<span class="token punctuation">)</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> data3<span class="token punctuation">,</span> data4 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>plotter<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'x'</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>ax1<span class="token punctuation">,</span> ax2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>plotter<span class="token punctuation">(</span>ax1<span class="token punctuation">,</span> data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'x'</span><span class="token punctuation">)</span>plotter<span class="token punctuation">(</span>ax2<span class="token punctuation">,</span> data3<span class="token punctuation">,</span> data4<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="设置后端的不同方式"><a href="#设置后端的不同方式" class="headerlink" title="设置后端的不同方式"></a>设置后端的不同方式</h3><ol><li><p><code>rcParams['backend']</code> 配置文件 <code>matplotlibrc</code></p></li><li><p><code>MPLBACKEND</code> 环境变量</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Linux</span><span class="token operator">&gt;</span> <span class="token builtin class-name">export</span> <span class="token assign-left variable">MPLBACKEND</span><span class="token operator">=</span>qt5agg<span class="token operator">&gt;</span> python simple_plot.py<span class="token operator">&gt;</span> <span class="token assign-left variable">MPLBACKEND</span><span class="token operator">=</span>qt5agg python simple_plot.py<span class="token comment"># Windows</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> <span class="token assign-left variable">MPLBACKEND</span><span class="token operator">=</span>qt5agg<span class="token operator">&gt;</span> python simple_plot.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>matplotlib.use</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlibmatplotlib<span class="token punctuation">.</span>use<span class="token punctuation">(</span><span class="token string">'qt5agg'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="交互模式与非交互模式"><a href="#交互模式与非交互模式" class="headerlink" title="交互模式与非交互模式"></a>交互模式与非交互模式</h3><ol><li><p>交互模式即时更新图像：PyQt/PySide, PyGObject, Tkinter, wxPython, or macOS/Cocoa。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>ion<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>非交互模式调用 <code>show</code> 一次性绘制所有对象。阻塞进程，直到手动关闭绘制的图像窗口。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>ioff<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch 编程的一些坑</title>
      <link href="2021-04-05/pytorch-bian-cheng-de-yi-xie-keng/"/>
      <url>2021-04-05/pytorch-bian-cheng-de-yi-xie-keng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token punctuation">.</span>tensor <span class="token keyword">as</span> Tensortensor <span class="token operator">=</span> Tensor<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="数据复制"><a href="#数据复制" class="headerlink" title="数据复制"></a>数据复制</h2><h3 id="tensor对象与numpy对象的数据转换"><a href="#tensor对象与numpy对象的数据转换" class="headerlink" title="tensor对象与numpy对象的数据转换"></a><code>tensor</code>对象与<code>numpy</code>对象的数据转换</h3><ol><li><p>共享内存：</p><ul><li><code>tensor</code> -&gt; <code>numpy</code>: <code>tensor.numpy()</code></li><li><code>numpy</code> -&gt; <code>tensor</code>: <code>Tensor.from_numpy()</code></li></ul></li><li><p>不共享内存：</p><ul><li><code>tensor</code> -&gt; <code>numpy</code>: <code>tensor.clone().numpy()</code></li><li><code>numpy</code> -&gt; <code>tensor</code>: <code>tensor.from_numpy(array.copy())</code></li></ul></li></ol><h3 id="tensor-对象之间的复制"><a href="#tensor-对象之间的复制" class="headerlink" title="tensor 对象之间的复制"></a><code>tensor</code> 对象之间的复制</h3><ol><li>共享内存：<code>tensor.detach()</code>，从计算图中分离，不计算梯度</li><li>不共享内存：<code>tensor.clone()</code>，是否计算梯度，看原 <code>tensor</code> 的配置</li><li><strong>Deprecated</strong> 不共享内存：<code>tensor()</code>，是否计算梯度，看构造函数的传参</li></ol><h3 id="cpu-向-gpu-的转换"><a href="#cpu-向-gpu-的转换" class="headerlink" title="cpu 向 gpu 的转换"></a><code>cpu</code> 向 <code>gpu</code> 的转换</h3><ul><li>拷贝到 GPU：<code>tensor.cuda()</code></li><li>转换到 GPU：<code>tensor.to()</code></li></ul><h2 id="Tensor类与tensor对象的操作"><a href="#Tensor类与tensor对象的操作" class="headerlink" title="Tensor类与tensor对象的操作"></a><code>Tensor</code>类与<code>tensor</code>对象的操作</h2><h3 id="从tensor中获取元素"><a href="#从tensor中获取元素" class="headerlink" title="从tensor中获取元素"></a>从<code>tensor</code>中获取元素</h3><ol><li>下标访问得到一个 <code>0-dim</code> 的 <code>scalar</code></li><li>使用下标访问 + <code>item()</code> 得到元素的值</li><li>单元素 <code>tensor</code> 也可以使用 <code>item()</code></li></ol><h3 id="整数类型除法"><a href="#整数类型除法" class="headerlink" title="整数类型除法"></a>整数类型除法</h3><p>计算数据类型为 <code>Tensor.uint8, Tensor.int8, Tensor.int16, Tensor.int32, Tensor.int64</code> 或者张量类型为 <code>Tensor.CharTensor, Tensor.ShortTensor, Tensor.IntTensor, Tensor.LongTensor</code> 的浮点数类型除法时，使用 <code>Tensor.true_divide(tensor1, tensor2)</code></p><h3 id="Tensor-构造的-Tensor-Size-问题"><a href="#Tensor-构造的-Tensor-Size-问题" class="headerlink" title="Tensor 构造的 Tensor.Size 问题"></a><code>Tensor</code> 构造的 <code>Tensor.Size</code> 问题</h3><ol><li><code>Tensor.tensor(3.14159) </code>, size: <code>torch.Size([])</code> ~ <code>scalar</code> 单元素 <code>tensor</code></li><li><code>Tensor.tensor([])</code>, size: <code>torch.Size([0])</code> ~ 空</li><li><code>Tensor.tensor([1, 2])</code>, size: <code>torch.Size([2])</code> ~ <code>tensor</code></li><li><code>Tensor.Tensor(1, 2)</code>, size: <code>torch.Size([1, 2])</code> ~ 规定<code>tensor</code>大小的初始化方式</li></ol><p>综合，传入一个<code>list</code>，两种构造方法都是将<code>list</code>转换成一个<code>tensor</code>；<br>传入数字，<code>Tensor.tensor</code>只接受单个数字用于构造<code>scalar</code>，<code>Tensor.Tensor</code>用于构造对应大小<code>Tensor</code></p><h3 id="tensor-的大小改变"><a href="#tensor-的大小改变" class="headerlink" title="tensor 的大小改变"></a><code>tensor</code> 的大小改变</h3><ol><li><code>tensor.view()</code> 创造一个共享内存的新 tensor</li><li><code>tensor.squeeze(), tensor.unsqueeze()</code> 减少、添加一个维度，创造一个共享内存的新 tensor</li><li><code>tensor.resize()</code> 如果新分配空间大小小于原空间，保留数据不删除</li></ol><h3 id="tensor-的索引"><a href="#tensor-的索引" class="headerlink" title="tensor 的索引"></a><code>tensor</code> 的索引</h3><ol><li><p><code>tensor[0:1, :2]</code>, size: <code>torch.Size([1, 2])</code>; <code>tensor[0, :2]</code>, size: <code>torch.Size([2])</code></p></li><li><p><code>None</code> 相当于 <code>np.newaxis</code>，新增一个轴：<code>tensor[None].shape</code>, size: <code>torch.Size([1, 10])</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Collections, the Container datatypes</title>
      <link href="2021-04-04/python-gao-ji-bian-cheng-collections-the-container-datatypes/"/>
      <url>2021-04-04/python-gao-ji-bian-cheng-collections-the-container-datatypes/</url>
      
        <content type="html"><![CDATA[<h4 id="1-Counter"><a href="#1-Counter" class="headerlink" title="1. Counter"></a>1. Counter</h4><p>如名字，<code>Counter</code>类用于提供一个方便的计数器</p><ul><li>构造函数<br>支持传入 <code>iterable</code> 或者 <code>mappings</code> 类型的对象进行初始化，最常用传入一个 <code>list</code></li><li><code>elements()</code><br>返回一个迭代器，包含所有计数大于 0 的元素，每个元素出现的次数为他的计数</li><li><code>most_common([n])</code><br>返回前<code>n</code>个最频繁出现的元素</li><li>支持 <code>dict</code>的函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 基础命令介绍</title>
      <link href="2021-03-04/hexo-ji-chu-ming-ling-jie-shao/"/>
      <url>2021-03-04/hexo-ji-chu-ming-ling-jie-shao/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/">Hexo</a>！ 这是你的第一篇文章。访问 <a href="https://hexo.io/docs/">documentation</a> 来了解更多信息。<br>在使用 Hexo 的过程中如果你遇到了任何的问题，你可以在 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> 找到答案，<br>或者你可以在 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 进行提问。</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行本地服务器"><a href="#运行本地服务器" class="headerlink" title="运行本地服务器"></a>运行本地服务器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server$ hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态网页文件"><a href="#生成静态网页文件" class="headerlink" title="生成静态网页文件"></a>生成静态网页文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate$ hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到远端网站"><a href="#部署到远端网站" class="headerlink" title="部署到远端网站"></a>部署到远端网站</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更多信息，请访问: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="写作技巧"><a href="#写作技巧" class="headerlink" title="写作技巧"></a>写作技巧</h2><h3 id="插入站内文章链接"><a href="#插入站内文章链接" class="headerlink" title="插入站内文章链接"></a>插入站内文章链接</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">{</span>% post_link <span class="token punctuation">[</span>文章文件名（不要后缀）<span class="token punctuation">]</span> <span class="token punctuation">[</span>文章标题（可选）<span class="token punctuation">]</span> %<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><ol><li>安装 <code>hexo-asset-image</code></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>更新 <code>_config.yaml</code></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>更新 <code>/node_modules/hexo-asset-image/index.js</code> 中的代码，详情请见链接</li></ol><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token keyword">var</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"cheerio"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><span class="token keyword">function</span> <span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> m<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> version <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>hexo<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">"after_post_render"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> config <span class="token operator">=</span> hexo<span class="token punctuation">.</span>config<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>post_asset_folder<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> link <span class="token operator">=</span> data<span class="token punctuation">.</span>permalink<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>version<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">Number</span><span class="token punctuation">(</span>version<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>      <span class="token keyword">var</span> beginPos <span class="token operator">=</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">var</span> beginPos <span class="token operator">=</span> <span class="token function">getPosition</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span>    <span class="token keyword">var</span> endPos <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    link <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>beginPos<span class="token punctuation">,</span> endPos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> toprocess <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"excerpt"</span><span class="token punctuation">,</span> <span class="token string">"more"</span><span class="token punctuation">,</span> <span class="token string">"content"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> toprocess<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> key <span class="token operator">=</span> toprocess<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        ignoreWhitespace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        xmlMode<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        lowerCaseTags<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        decodeEntities<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment">// For windows style path, we replace '\' to '/'.</span>          <span class="token keyword">var</span> src <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">http[s]*.*|\/\/.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\s*\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// For "about" page, the first part of "src" can't be removed.</span>            <span class="token comment">// In addition, to support multi-level local directory.</span>            <span class="token keyword">var</span> linkArray <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> elem <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> srcArray <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> elem <span class="token operator">!=</span> <span class="token string">""</span> <span class="token operator">&amp;&amp;</span> elem <span class="token operator">!=</span> <span class="token string">"."</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>srcArray<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> srcArray<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            src <span class="token operator">=</span> srcArray<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>root <span class="token operator">+</span> link <span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span>              console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"update link as:--&gt;"</span> <span class="token operator">+</span> config<span class="token punctuation">.</span>root <span class="token operator">+</span> link <span class="token operator">+</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          console<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"no src attr, skipped..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          console<span class="token punctuation">.</span>info <span class="token operator">&amp;&amp;</span> console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><p>使用 <code>create</code> 命令时自动创建同名文件夹用于存储图片</p></li><li><p>插入图片</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">!</span><span class="token punctuation">[</span>这是代替图片的文字，随便写<span class="token punctuation">]</span><span class="token punctuation">(</span>head.jpeg<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://www.jianshu.com/p/f72aaad7b852">Pictures</a></p>]]></content>
      
      
      <categories>
          
          <category> Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
